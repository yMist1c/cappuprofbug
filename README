# Cappu - Plataforma de Ensino Online

Cappu é uma plataforma de ensino online que conecta professores e alunos, oferecendo recursos para criação e gerenciamento de cursos, aulas, exercícios e materiais didáticos.

## Funcionalidades

- Autenticação de usuários (professores e alunos)
- Criação e gerenciamento de cursos
- Upload de materiais didáticos
- Sistema de exercícios
- Técnicas de estudo (Pomodoro, Feynman, etc.)
- Sistema de resumos
- Dashboard personalizado para professores e alunos

## Tecnologias Utilizadas

- Node.js
- Express.js
- EJS (Template Engine)
- MySQL (Sequelize ORM)
- Passport.js (Autenticação)
- Multer (Upload de arquivos)
- BCrypt (Criptografia de senhas)

## Requisitos

- Node.js (v14 ou superior)
- MySQL (v8.0 ou superior)
- NPM ou Yarn

## Instalação

1. Clone o repositório:

```bash
git clone https://github.com/seu-usuario/cappu.git
cd cappu
```

2. Instale as dependências:

```bash
npm install
```

3. Configure o arquivo `.env`:

```env
PORT=3000
DB_NAME=cappu
DB_USER=seu_usuario
DB_PASSWORD=sua_senha
DB_HOST=localhost
SESSION_SECRET=sua_chave_secreta
NODE_ENV=development
```

4. Inicie o servidor:

```bash
npm start
```

Para desenvolvimento, use:

```bash
npm run dev
```

## Estrutura do Projeto

```
cappu/
├── config/           # Configurações do projeto
├── models/           # Modelos do banco de dados
├── public/           # Arquivos estáticos
│   ├── css/         # Estilos CSS
│   ├── js/          # Scripts JavaScript
│   └── images/      # Imagens
├── routes/           # Rotas da aplicação
├── views/           # Templates EJS
│   ├── auth/        # Páginas de autenticação
│   ├── dashboard/   # Páginas do dashboard
│   └── partials/    # Partials EJS
├── .env             # Variáveis de ambiente
├── .gitignore       # Arquivos ignorados pelo Git
├── package.json     # Dependências e scripts
├── README.md        # Documentação
└── server.js        # Arquivo principal
```

## Contribuição

1. Fork o projeto
2. Crie uma branch para sua feature (`git checkout -b feature/AmazingFeature`)
3. Commit suas mudanças (`git commit -m 'Add some AmazingFeature'`)
4. Push para a branch (`git push origin feature/AmazingFeature`)
5. Abra um Pull Request

## Licença

Este projeto está licenciado sob a licença MIT - veja o arquivo [LICENSE](LICENSE) para detalhes.
